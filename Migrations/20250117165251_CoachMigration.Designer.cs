// <auto-generated />
using System;
using FootballLeague.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FootballLeague.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250117165251_CoachMigration")]
    partial class CoachMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FootballLeague.Entities.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.HasKey("Id");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("FootballLeague.Entities.CoachContract", b =>
                {
                    b.Property<int>("CoachContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CoachContractId");

                    b.ToTable("Coachcontracts");
                });

            modelBuilder.Entity("FootballLeague.Entities.CoachNum", b =>
                {
                    b.Property<int>("CoachNumId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.HasKey("CoachNumId");

                    b.ToTable("CoachNums");
                });

            modelBuilder.Entity("FootballLeague.Entities.CoachContract", b =>
                {
                    b.HasOne("FootballLeague.Entities.Coach", "Coach")
                        .WithOne("CoachContracts")
                        .HasForeignKey("FootballLeague.Entities.CoachContract", "CoachContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("FootballLeague.Entities.CoachNum", b =>
                {
                    b.HasOne("FootballLeague.Entities.Coach", "Coach")
                        .WithOne("CoachNums")
                        .HasForeignKey("FootballLeague.Entities.CoachNum", "CoachNumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("FootballLeague.Entities.Coach", b =>
                {
                    b.Navigation("CoachContracts")
                        .IsRequired();

                    b.Navigation("CoachNums")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
